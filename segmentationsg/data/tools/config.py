import os
from detectron2.config import CfgNode as CN

def add_dataset_config(cfg):
  _C = cfg

  _C.MODEL.ROI_HEADS.NUM_OUTPUT_CLASSES = 80
  _C.MODEL.ROI_HEADS.EMBEDDINGS_PATH = ""
  _C.MODEL.ROI_HEADS.EMBEDDINGS_PATH_COCO = ""
  _C.MODEL.ROI_HEADS.LINGUAL_MATRIX_THRESHOLD = 0.05
  _C.MODEL.ROI_HEADS.MASK_NUM_CLASSES = 80

  _C.MODEL.FREEZE_LAYERS = CN()
  _C.MODEL.FREEZE_LAYERS.META_ARCH = []
  _C.MODEL.FREEZE_LAYERS.ROI_HEADS = []

  _C.DATASETS.TYPE = ""
  _C.DATASETS.VISUAL_GENOME = CN()
  _C.DATASETS.VISUAL_GENOME.IMAGES = ''
  _C.DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY = ''
  _C.DATASETS.VISUAL_GENOME.IMAGE_DATA = ''
  _C.DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5 = ''
  _C.DATASETS.VISUAL_GENOME.TRAIN_MASKS = ""
  _C.DATASETS.VISUAL_GENOME.TEST_MASKS = ""
  _C.DATASETS.VISUAL_GENOME.VAL_MASKS = ""
  _C.DATASETS.VISUAL_GENOME.CLIPPED = False

  _C.DATASETS.MSCOCO = CN()
  _C.DATASETS.MSCOCO.ANNOTATIONS = ''
  _C.DATASETS.MSCOCO.DATAROOT = ''

  _C.DATASETS.VISUAL_GENOME.FILTER_EMPTY_RELATIONS = True
  _C.DATASETS.VISUAL_GENOME.FILTER_DUPLICATE_RELATIONS = True
  _C.DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP = True
  _C.DATASETS.VISUAL_GENOME.NUMBER_OF_VALIDATION_IMAGES = 5000
  _C.DATASETS.VISUAL_GENOME.BOX_SCALE = 1024

  _C.DATASETS.SEG_DATA_DIVISOR = 1

  _C.DATASETS.TRANSFER = ('coco_train_2014',)
  _C.DATASETS.MASK_TRAIN = ('coco_train_2017',)
  _C.DATASETS.MASK_TEST = ('coco_val_2017',)